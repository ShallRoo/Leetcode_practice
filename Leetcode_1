# -*- coding: utf-8 -*-
"""
Created on Sun Sep 26 20:10:51 2021

@author: ShallRoo
"""

"""

leetcode_1:
    
给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target  的那 两个 整数，并返回它们的数组下标。

你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。

你可以按任意顺序返回答案。

"""

class Solution:
    
    def twoSum(self,nums,target):
        #创建字典：键值对num:index
        dict={}
        for index,num in enumerate(nums):
            #enumerate()函数是返回数组索引，index从0开始，num对应数值
            if dict.get(target-num) is not None:
                return [index,dict.get(target-num)]
            dict[num] = index
            
nums = [2,4,5,8]
print(Solution().twoSum(nums, 7))
#spyder不能显式输出return的值，必须要print

#原始的，时间复杂度较高的方法如下：
#下次再遇到时，可以考虑用enumerate函数替代range(len(...))

def twosum(nums,target):
    l = len(nums)
    for i in range(l):
        for j in range(i+1,l):
            if nums[i]+nums[j]==target:
                return [i,j]

print(twosum(nums, 7))
